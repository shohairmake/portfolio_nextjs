{"version":3,"file":"static/webpack/static/development/pages/index.js.3a72a68893cc1bd5d604.hot-update.js","sources":["webpack:///./src/components/Album/Album.js"],"sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { GridList, GridListTile } from '@material-ui/core'\nimport { tileData } from './tileData'\nimport Link from 'next/link'\nimport anime from 'animejs'\n// import { ImageAnimation } from '../helper/animationHelper'\n\nconst useStyles = makeStyles((theme) => ({\n    gridList: {\n        width: '100%',\n        height: 865,\n        overflow: 'hidden',\n    },\n    line: {\n        opacity: 0,\n        position: 'absolute',\n        left: 0,\n        height: '100%',\n        width: '0.5em',\n        backgroundColor: '#000',\n        transformOrigin: '0 50%',\n        zIndex: 100,\n    },\n}))\n\nconst ImageAnimation = () => {\n    anime.timeline({ loop: false }).add({\n        targets: '.line',\n        scaleY: [0, 1],\n        width: '0.5em',\n        opacity: [0.5, 1],\n        easing: 'easeOutExpo',\n        duration: 700,\n    })\n    // .add({\n    //     targets: line,\n    //     left: 0,\n    //     width: '100%',\n    //     easing: 'easeOutExpo',\n    //     duration: 700,\n    //     delay: 100,\n    // })\n    // .add({\n    //     targets: line,\n    //     right: 0,\n    //     translateX: '100%',\n    //     easing: 'easeOutExpo',\n    //     duration: 700,\n    //     delay: 100,\n    // })\n    // .add(\n    //     {\n    //         targets: element,\n    //         opacity: [0, 1],\n    //         easing: 'easeOutExpo',\n    //         duration: 600,\n    //     },\n    //     '-=1000'\n    // )\n    // .add({\n    //     targets: line,\n    //     opacity: 0,\n    //     duration: 1000,\n    //     easing: 'easeOutExpo',\n    //     delay: 1000,\n    // })\n}\n\nexport default function Album(props) {\n    const classes = useStyles()\n\n    React.useEffect(() => {\n        if (props.isActive) {\n            ImageAnimation()\n        }\n    }, [props.isActive])\n\n    return (\n        <Link href=\"/work\" passHref prefetch={false}>\n            <div className={classes.root}>\n                <GridList\n                    cellHeight={300}\n                    className={classes.gridList}\n                    cols={5}\n                >\n                    {tileData.map((tile) => (\n                        <GridListTile\n                            className={'imgBox'}\n                            key={tile.img}\n                            cols={tile.cols || 1}\n                        >\n                            <span className={`${classes.line} line`}></span>\n                            <img\n                                className={`${tile.title} image`}\n                                src={tile.img}\n                                alt={tile.title}\n                            />\n                        </GridListTile>\n                    ))}\n                </GridList>\n            </div>\n        </Link>\n    )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AANA;AAAA;AACA;AAikBA;;;;A","sourceRoot":""}